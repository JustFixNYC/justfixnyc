"use strict";var ApplicationConfiguration=function(){var applicationModuleName="justfix",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","ng.deviceDetector","ngFileUpload","bootstrapLightbox","angularLazyImg","duScroll"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|tel|sms|mailto):/)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),FastClick.attach(document.body),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("actions"),ApplicationConfiguration.registerModule("activity"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("issues"),ApplicationConfiguration.registerModule("users"),angular.module("actions").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listActions",{url:"/home",templateUrl:"modules/actions/views/list-actions.client.view.html"})}]),angular.module("actions").controller("ActionsController",["$scope","$location","Authentication","Actions","Activity",function($scope,$location,Authentication,Actions,Activity){$scope.authentication=Authentication,$scope.list=function(){$scope.actions=Actions.query()}}]),angular.module("actions").controller("ComplaintLetterController",["$scope","$modalInstance","newActivity",function($scope,$modalInstance,newActivity){$scope.newActivity=newActivity,$scope.done=function(){$modalInstance.close($scope.newActivity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("ContactSuperController",["$scope","$modalInstance","deviceDetector","Messages","newActivity",function($scope,$modalInstance,deviceDetector,Messages,newActivity){$scope.newActivity=newActivity;var isIOS8=function(){var deviceAgent=deviceDetector.raw.userAgent.toLowerCase();return/(iphone|ipod|ipad).* os 8_/.test(deviceAgent)},generateURL=function(){var href="sms:",msg=Messages.getSMSMessage();if($scope.superphone&&(href+=$scope.superphone),"ios"===deviceDetector.os)href+=isIOS8()?"&":";",href=href+"body="+msg;else{if("android"!==deviceDetector.os)return;href=href+"?body="+msg}return href};$scope.done=function(type,event){var href="";"sms"===type?href=generateURL():"tel"===type&&$scope.superphone&&(href="tel:"+$scope.superphone),$modalInstance.close($scope.newActivity),href.length&&(window.location.href=href)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("DecreasedServicesController",["$scope","$modalInstance","newActivity",function($scope,$modalInstance,newActivity){$scope.newActivity=newActivity,$scope.addUpdate=function(){$modalInstance.close($scope.newActivity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("HpactionController",["$scope","$modalInstance","newActivity",function($scope,$modalInstance,newActivity){$scope.newActivity=newActivity,$scope.done=function(){$modalInstance.close($scope.newActivity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("MessageLandlordController",["$scope","$modalInstance","Messages","newActivity",function($scope,$modalInstance,Messages,newActivity){$scope.newActivity=newActivity,$scope.email={},$scope.email.content=Messages.getLandlordEmailMessage(),$scope.done=function(){$scope.email.contact=$scope.email.landlord+"?subject="+Messages.getLandlordEmailSubject(),$scope.emailHref="mailto:"+encodeURI($scope.email.contact+"&body="+$scope.email.content),$modalInstance.close($scope.newActivity),window.location.href=$scope.emailHref},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("RentalHistoryController",["$scope","$modalInstance","Messages","newActivity",function($scope,$modalInstance,Messages,newActivity){$scope.newActivity=newActivity,$scope.emailContent=Messages.getRentalHistoryMessage(),$scope.emailHref="mailto:"+encodeURI("rentinfo@nyshcr.org?subject=Request For Rental History&body="+$scope.emailContent),$scope.done=function(){$modalInstance.close($scope.newActivity),window.location.href=$scope.emailHref},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("UpdateActivityController",["$scope","$modalInstance","newActivity","Issues",function($scope,$modalInstance,newActivity,Issues,close){$scope.newActivity=newActivity,$scope.issues=Issues.getUserIssuesByKey($scope.newActivity.key),console.log("update activity cntrl",$scope.newActivity),$scope.dp={opened:!1},$scope.openDp=function(){$scope.dp.opened=!$scope.dp.opened,console.log("wtf")},$scope.onFileSelect=function(files){console.log(files)},$scope.done=function(){$modalInstance.close($scope.newActivity)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").directive("smsMessage",["deviceDetector","Messages",function(deviceDetector,Messages){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var isIOS8=function(){var deviceAgent=deviceDetector.raw.userAgent.toLowerCase();return/(iphone|ipod|ipad).* os 8_/.test(deviceAgent)},generateURL=function(){var href="sms:",msg=Messages.getSMSMessage();if(scope.superphone&&(href+=scope.superphone),"ios"===deviceDetector.os)href+=isIOS8()?"&":";",href=href+"body="+msg,console.log("href",href),attrs.$set("href",href);else{if("android"!==deviceDetector.os)return;href=href+"?body="+msg,attrs.$set("href",href)}return href};scope.$watch(scope.superphone,function(){console.log("y"),generateURL()})}}}]),angular.module("actions").directive("toDoItem",["$modal","$sce","$timeout","Activity","Actions",function($modal,$sce,$timeout,Activity,Actions){return{restrict:"E",templateUrl:"modules/actions/partials/to-do-item.client.view.html",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){$scope.filterContentHTML=function(){return $sce.trustAsHtml($scope.action.content)}}],link:function(scope,element,attrs){scope.action.completed||(scope.action.completed=!1),scope.newActivity={date:"",title:scope.action.title,key:scope.action.key},scope.isModal=function(){switch(scope.action.cta.type){case"initialContent":return!0;case"modal":return!0;default:return!1}},scope.openModal=function(){var modalInstance=$modal.open({templateUrl:"modules/actions/partials/modals/"+scope.action.cta.template,controller:scope.action.cta.controller,resolve:{newActivity:function(){return scope.newActivity}}});modalInstance.result.then(function(newActivity){scope.newActivity=newActivity,"initialContent"!==scope.action.cta.type?scope.triggerFollowUp():scope.createActivity()},function(){})},scope.triggerFollowUp=function(url,type){scope.action.$followUp({type:"add"}),url&&"tel"===type?window.location.href=url:url&&"link"===type&&window.open(url,"_blank")},scope.cancelFollowUp=function(){scope.action.$followUp({type:"remove"})},scope.closeAlert=function(){scope.action.closeAlert=!0,scope.actions.splice(scope.$index,1)},scope.createActivity=function(){var activity=new Activity(scope.newActivity);activity.$save(function(response){scope.action.completed=!0,scope.action.closeAlert=!1;var idx=scope.$index,newActions=Actions.query({key:scope.newActivity.key},function(){newActions.forEach(function(action){scope.actions.splice(++idx,0,action)})})},function(errorResponse){scope.error=errorResponse.data.message,scope.closeErrorAlert=!1})}}}}]),angular.module("actions").factory("Actions",["$resource",function($resource){return $resource("actions",{},{followUp:{method:"POST"}})}]),angular.module("actions").factory("Messages",["$http","$q","$filter","Authentication",function($http,$q,$filter,Authentication){var user=Authentication.user,getSMSMessage=function(){var message="Hello, this is "+user.fullName+" at "+user.address+", Apt. "+user.unit+". I'm experiencing issues with my apartment and would like to get them resolved. Please contact me as soon as possible at this phone number. Thank you!";return message},getRentalHistoryMessage=function(){var message="Hello,\n\nI, "+user.fullName+", am currently residing at "+user.address+", Apt. "+user.unit+" in "+user.borough+", NY  and would like to request the rental history for this apartment. Any information you can provide me would be greatly appreciated.\n\nThank you, \n\n"+user.fullName;return message},getLandlordEmailMessage=function(){var message="To whom it may regard, \n\nI am requesting the following repairs in my apartment referenced below [and/or] in the public areas of the building:\n\n",issuesContent="";for(var issue in user.issues){var key=issue,title=$filter("areaTitle")(key),vals=user.issues[issue];if(vals.length){var activityIdx=user.activity.map(function(i){return i.key}).indexOf(key);if(-1!==activityIdx)var activity=user.activity[activityIdx];issuesContent+=title+":\n",vals.forEach(function(v){issuesContent+=" - "+v.title,v.emergency&&(issuesContent+=" (FIX IMMEDIATELY)"),issuesContent+="\n"}),issuesContent+="\n   First Appeared: ",activity?(issuesContent+=$filter("date")(activity.date,"longDate"),issuesContent+="\n   Additional Information:",issuesContent+="\n   "+activity.description,issuesContent+="\n",activity=void 0):issuesContent+="\n   Additional Information:",issuesContent+="\n"}}message+=issuesContent+"\n\n";var superContactIdx=user.activity.map(function(i){return i.key}).indexOf("contactSuper");return-1!==superContactIdx&&(message+="I have already contacted the person responsible for making repairs on ",message+=$filter("date")(user.activity[superContactIdx].date,"longDate"),message+=", but the issue has not been resolved. "),message+="In the meantime, I have recorded photo and written evidence of the violations. Please contact me as soon as possible to arrange a time to have these repairs made by replying directly to this email or calling the phone number provided below.",message+="\n\n\nRegards,\n"+user.fullName+"\n"+user.address+"\nApt. "+user.unit+"\n"+user.borough+", NY \n"+$filter("tel")(user.phone)},getLandlordEmailSubject=function(){return"Formal notice of repairs needed at "+user.address+" Unit "+user.unit};return{getSMSMessage:getSMSMessage,getRentalHistoryMessage:getRentalHistoryMessage,getLandlordEmailMessage:getLandlordEmailMessage,getLandlordEmailSubject:getLandlordEmailSubject}}]),angular.module("activity").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listActivity",{url:"/timeline",templateUrl:"modules/activity/views/list-activity.client.view.html"})}]),angular.module("activity").controller("ActivityController",["$scope","$location","$http","Authentication","Users","Activity","Lightbox",function($scope,$location,$http,Authentication,Users,Activity,Lightbox){$scope.authentication=Authentication,$scope.list=function(){$scope.activities=Activity.query()},$scope.openLightboxModal=function(photos,index){Lightbox.openModal(photos,index)}}]),angular.module("activity").factory("Activity",["$resource",function($resource){var transformRequest=function(data,headersGetter){if(void 0===data)return data;var fd=new FormData;return angular.forEach(data,function(value,key){value instanceof FileList?1===value.length?fd.append(key,value[0]):angular.forEach(value,function(file,index){fd.append(key+"_"+index,file)}):fd.append(key,value)}),fd};return $resource("activity",{},{save:{method:"POST",transformRequest:transformRequest,headers:{"Content-Type":void 0}}})}]),angular.module("core").run(["$rootScope","$state","$window","Authentication",function($rootScope,$state,$window,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){Authentication.user&&"home"===toState.name&&(event.preventDefault(),$state.go("listActions"))}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$window.scrollTo(0,0)})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider","$provide",function($stateProvider,$urlRouterProvider,$provide){$provide.decorator("accordionGroupDirective",["$delegate",function($delegate){return $delegate[0].templateUrl="bootstrap-templates/accordion/accordion-group.html",$delegate}]),$provide.decorator("accordionDirective",["$delegate",function($delegate){return $delegate[0].templateUrl="bootstrap-templates/accordion/accordion.html",$delegate}]),$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("manifesto",{url:"/manifesto",templateUrl:"modules/core/views/manifesto.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","deviceDetector",function($scope,Authentication,deviceDetector){$scope.authentication=Authentication,$scope.device=deviceDetector}]),angular.module("core").directive("filesModel",function(){return{controller:["$parse","$element","$attrs","$scope",function($parse,$element,$attrs,$scope){var exp=$parse($attrs.filesModel);$element.on("change",function(){exp.assign($scope,this.files),$scope.$apply()})}]}}),angular.module("core").directive("fullBg",["$window",function($window){return function(scope,element,attrs){function getWidth(){return self.innerHeight?self.innerWidth:document.documentElement&&document.documentElement.clientHeight?document.documentElement.clientWidth:document.body?document.body.clientWidth:void 0}$window.addEventListener("resize",function(){element.css("width",getWidth()+"px")}),element.css("width",getWidth()+"px")}}]),angular.module("core").directive("goToTop",["$document",function($document){return{restrict:"A",link:function(scope,elm,attrs){elm.bind("click",function(){function scrollToTop(element,to,duration){if(!(0>duration)){var difference=to-element.scrollTop,perTick=difference/duration*10;setTimeout(function(){element.scrollTop=element.scrollTop+perTick,scrollToTop(element,to,duration-10)},10)}}scrollToTop($document[0].body,0,200)})}}}]),angular.module("core").directive("jumpTo",["$document",function($document){return{controller:["$parse","$element","$attrs","$scope",function($parse,$element,$attrs,$scope){var id=$attrs.jumpTo,duration=1e3,easing=function(t){return.5>t?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},offset=0,someElement=angular.element(document.getElementById(id));$element.bind("click",function(e){$document.scrollToElement(someElement,offset,duration,easing)})}]}}]),angular.module("core").directive("justfixHeader",["$document","$window","$timeout","Authentication",function($document,$window,$timeout,Authentication){return{restrict:"A",link:function(scope,elm,attrs){scope.authentication=Authentication,scope.isCollapsed=!1,scope.toggleCollapsibleMenu=function(){scope.isCollapsed=!scope.isCollapsed},scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){scope.isCollapsed=!1,scope.stateName=toState.name})}}}]),angular.module("core").directive("phoneInput",["$filter","$browser",function($filter,$browser){return{require:"ngModel",link:function($scope,$element,$attrs,ngModelCtrl){var listener=function(){var value=$element.val().replace(/[^0-9]/g,"");$element.val($filter("tel")(value,!1))};ngModelCtrl.$parsers.push(function(viewValue){return viewValue.replace(/[^0-9]/g,"").slice(0,10)}),ngModelCtrl.$render=function(){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1))};var unbindAfterInit=$scope.$watch(function(){return ngModelCtrl.$modelValue},function(value){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1)),unbindAfterInit()});$element.bind("change",listener),$element.bind("keydown",function(event){var key=event.keyCode;91===key||key>15&&19>key||key>=37&&40>=key||$browser.defer(listener)}),$element.bind("paste cut",function(){$browser.defer(listener)})}}}]),angular.module("core").directive("propagateEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.on("click",function(e){console.log("propagate event")})}}}),angular.module("core").directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.on(attr.stopEvent,function(e){e.stopPropagation()})}}}),angular.module("core").directive("windowHeight",["$window","deviceDetector",function($window,deviceDetector){return function(scope,element,attrs){function getHeight(){return self.innerWidth?self.innerHeight:document.documentElement&&document.documentElement.clientWidth?document.documentElement.clientHeight:document.body?document.body.clientHeight:void 0}deviceDetector.isMobile()||$window.addEventListener("resize",function(){element.css("height",getHeight()+"px")}),deviceDetector.isMobile()&&"safari"===deviceDetector.browser?element.css("height",getHeight()+60+"px"):element.css("height",getHeight()+"px")}}]),angular.module("core").filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var city,number;switch(value.length){case 1:case 2:case 3:city=value;break;default:city=value.slice(0,3),number=value.slice(3)}return number?(number=number.length>3?number.slice(0,3)+"-"+number.slice(3,7):number,("("+city+") "+number).trim()):"("+city}}),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("issues").run(["Menus",function(Menus){}]),angular.module("issues").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/issues/create","/issues/create/checklist"),$stateProvider.state("listIssues",{url:"/issues",templateUrl:"modules/issues/views/list-issues.client.view.html"}).state("createIssue",{url:"/issues/create",templateUrl:"modules/issues/views/create-issue.client.view.html","abstract":!0}).state("createIssue.checklist",{url:"/checklist",title:"Issues Checklist",templateUrl:"modules/issues/partials/create-issue-checklist.client.view.html"}).state("createIssue.general",{url:"/general",title:"General Info",templateUrl:"modules/issues/partials/create-issue-general.client.view.html"}).state("createIssue.personal",{url:"/personal",title:"Personal Information",templateUrl:"modules/issues/partials/create-issue-personal.client.view.html"}).state("createIssue.contact",{url:"/contact",title:"Who To Contact",templateUrl:"modules/issues/partials/create-issue-contact.client.view.html"}).state("createIssue.review",{url:"/review",title:"Review",templateUrl:"modules/issues/partials/create-issue-review.client.view.html"}).state("updateIssues",{url:"/issues/update",templateUrl:"modules/issues/views/update-issues.client.view.html"})}]),angular.module("issues").controller("IssuesChecklistController",["$scope","Issues",function($scope,Issues){$scope.checklist={},$scope.open=[],void 0===$scope.updateView&&($scope.updateView=!1),Issues.getChecklist().then(function(data){var i=0;for(var area in data[0]){var issues=data[0][area].issues;$scope.checklist[area]={numChecked:$scope.newIssue.issues[area]?$scope.newIssue.issues[area].length:0,issues:issues},$scope.newIssue.issues[area]||($scope.newIssue.issues[area]=[]),issues.forEach(function(issue){$scope.issues[area]&&-1!==$scope.issues[area].map(function(i){return i.title}).indexOf(issue.title)&&$scope.select(area,issue)}),$scope.open[i++]=!1}},function(err){console.error(err)}),$scope.oneAtATime=!0,$scope.status={idx:-1,isFirstOpen:!0,isFirstDisabled:!1},$scope.select=function(area,issue){if(this.isSelected(area,issue)){var i=$scope.newIssue.issues[area].indexOf(issue);$scope.newIssue.issues[area].splice(i,1),$scope.checklist[area].numChecked--}else $scope.newIssue.issues[area].push(issue),$scope.checklist[area].numChecked++},$scope.isSelected=function(area,issue){return $scope.newIssue.issues[area]?-1!==$scope.newIssue.issues[area].indexOf(issue):!1},$scope.closeGroup=function(idx){$scope.open[idx]=!1}}]),angular.module("issues").controller("IssuesController",["$scope","$location","$http","Authentication","Users",function($scope,$location,$http,Authentication,Users){if($scope.authentication=Authentication,$scope.authentication.user?$scope.issues=$scope.authentication.user.issues:$scope.issues={},$scope.newIssue={},$scope.newIssue.issues={},$location.search().address){var query=$location.search();console.log("string"),$scope.newIssue.name=query.name,$scope.newIssue.phone=query.phone,$scope.newIssue.address=query.address,$scope.newIssue.borough=query.borough,$scope.newIssue.unit=query.unit,$scope.newIssue.nycha=query.nycha,$scope.newIssue.password=query.password}$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$scope.currentStateTitle=toState.title}),$scope.create=function(){var newUser={fullName:$scope.newIssue.name,phone:$scope.newIssue.phone,borough:$scope.newIssue.borough,address:$scope.newIssue.address,unit:$scope.newIssue.unit,nycha:$scope.newIssue.nycha,issues:$scope.newIssue.issues,password:$scope.newIssue.password};$http.post("/auth/signup",newUser).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){console.log(response),$scope.error=response})},$scope.update=function(){$scope.authentication.user.issues=$scope.newIssue.issues;var user=new Users($scope.authentication.user);user.$update(function(response){Authentication.user=response,$scope.authentication.user=response,$location.path("/issues")},function(response){$scope.error=response.data.message})},$scope.hasIssues=function(){for(var area in $scope.issues)if($scope.issues[area].length)return!0;return!1}}]),angular.module("issues").filter("areaTitle",function(){return function(input){switch(input){case"generalApt":return"Whole Apartment";case"entryHallway":return"Entry/Hallway";case"kitchen":return"Kitchen";case"bathroom":return"Bathrooms";case"diningRoom":return"Dining Room";case"livingRoom":return"Living Room";case"bedrooms":return"Bedrooms";case"publicAreas":return"Public Areas";default:return""}}}),angular.module("issues").factory("Issues",["$http","$q","Authentication",function($http,$q,Authentication){var checklist="data/checklist.json",request=function(url){var deferred=$q.defer();return $http.get(url).then(function(response){deferred.resolve(response.data)},function(err){deferred.reject()}),deferred.promise};return{getChecklist:function(){return request(checklist)},getUserIssuesByKey:function(key){return Authentication.user.issues[key]}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$rootScope","$q","$location","Authentication",function($rootScope,$q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$rootScope","$scope","$http","$location","Authentication",function($rootScope,$scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/ssues"),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,console.log($scope.authentication.user),$location.path("/home")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","$filter","Users","Authentication",function($scope,$http,$location,$filter,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);