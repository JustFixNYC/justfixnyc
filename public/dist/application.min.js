"use strict";var ApplicationConfiguration=function(){var applicationModuleName="justfix",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngCookies","ui.router","ui.bootstrap","ui.select","ui.utils","ng.deviceDetector","ngFileUpload","bootstrapLightbox","angularLazyImg","duScroll","pascalprecht.translate","tmh.dynamicLocale"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]).config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|tel|sms|mailto):/)}]).constant("LOCALES",{locales:{en_US:"English",es:"EspaÃ±ol"},preferredLocale:"en_US"}).config(["$translateProvider",function($translateProvider){$translateProvider.useMissingTranslationHandlerLog()}]).config(["$translateProvider",function($translateProvider){$translateProvider.useStaticFilesLoader({prefix:"languages/locale-",suffix:".json"}),$translateProvider.preferredLanguage("en_US"),$translateProvider.useLocalStorage()}]).config(["tmhDynamicLocaleProvider",function(tmhDynamicLocaleProvider){tmhDynamicLocaleProvider.localeLocationPattern("lib/angular-i18n/angular-locale_{{locale}}.js")}]).run(function(){Array.prototype.containsByKey=Array.prototype.containsByKey||function(key){var i,l=this.length;for(i=0;l>i;i++)if(this[i].key==key)return!0;return!1},Array.prototype.getByKey=Array.prototype.getByKey||function(key){var i,l=this.length;for(i=0;l>i;i++)if(this[i].key==key)return this[i];return null},Array.prototype.removeByKey=Array.prototype.removeByKey||function(key){var i,l=this.length;for(i=l-1;i>=0;i--)this[i].key==key&&this.splice(i,1)}}),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),FastClick&&FastClick.attach(document.body),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("actions"),ApplicationConfiguration.registerModule("activity"),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("findhelp"),ApplicationConfiguration.registerModule("issues"),ApplicationConfiguration.registerModule("kyr"),ApplicationConfiguration.registerModule("onboarding"),ApplicationConfiguration.registerModule("problems"),ApplicationConfiguration.registerModule("users"),angular.module("actions").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listActions",{url:"/take-action",templateUrl:"modules/actions/views/list-actions.client.view.html",data:{"protected":!0}})}]),angular.module("actions").controller("ActionsController",["$scope","$filter","Authentication","Actions","Activity",function($scope,$filter,Authentication,Actions,Activity){$scope.user=Authentication.user,$scope.userCompletedDetails=function(){return $scope.user.actionFlags?-1!==$scope.user.actionFlags.indexOf("allInitial"):!1},$scope.list=function(){Actions.query(function(actions){console.log(actions),$scope.onceActions=$filter("filter")(actions,{$:"once"},!0),$scope.recurringActions=$filter("filter")(actions,{$:"recurring"},!0),$scope.legalActions=$filter("filter")(actions,{$:"legal"},!0)})}}]),angular.module("actions").controller("AddDetailsController",["$scope","$filter","$modalInstance","newActivity","Problems",function($scope,$filter,$modalInstance,newActivity,Problems,close){$scope.newActivity=newActivity,$scope.issues=Problems.getUserIssuesByKey($scope.newActivity.key),$scope.dp={opened:!1},$scope.openDp=function(){$scope.dp.opened=!$scope.dp.opened,console.log("wtf")},$scope.onFileSelect=function(files){console.log(files)},$scope.done=function(){$modalInstance.close({newActivity:$scope.newActivity})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("ComplaintLetterController",["$rootScope","$scope","$sce","$modalInstance","newActivity","Pdf","Authentication","$window",function($rootScope,$scope,$sce,$modalInstance,newActivity,Pdf,Authentication,$window){$scope.newActivity=newActivity,$scope.newActivity.fields=[],$scope.landlord={name:"",address:""},$scope.status={loading:!1,created:!1,error:!1},$scope.createLetter=function(){$scope.status.loading=!0,Pdf.createComplaint($scope.landlord).then(function(data){$scope.status.loading=!1,$scope.status.created=!0,$scope.letterUrl=data,$scope.newActivity.fields.push({title:"letterURL",value:data}),console.log(data)},function(error){$scope.status.loading=!1,$scope.status.error=!0,$scope.errorCode=error})},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.done=function(){$modalInstance.close({newActivity:$scope.newActivity,modalError:$scope.status.error})}}]),angular.module("actions").controller("ContactSuperController",["$scope","$modalInstance","deviceDetector","Messages","newActivity",function($scope,$modalInstance,deviceDetector,Messages,newActivity){$scope.newActivity=newActivity;var isIOS8=function(){var deviceAgent=deviceDetector.raw.userAgent.toLowerCase();return/(iphone|ipod|ipad).* os 8_/.test(deviceAgent)},generateURL=function(){var href="sms:",msg=Messages.getSMSMessage();if($scope.superphone&&(href+=$scope.superphone),"ios"===deviceDetector.os)href+=isIOS8()?"&":";",href=href+"body="+msg;else{if("android"!==deviceDetector.os)return;href=href+"?body="+msg}return href};$scope.done=function(type,event){var href="";"sms"===type?href=generateURL():"tel"===type&&$scope.superphone&&(href="tel:"+$scope.superphone),$modalInstance.close({newActivity:$scope.newActivity}),href.length&&(window.location.href=href)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("DecreasedServicesController",["$scope","$modalInstance","newActivity",function($scope,$modalInstance,newActivity){$scope.newActivity=newActivity,$scope.addUpdate=function(){$modalInstance.close({newActivity:$scope.newActivity})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("HpactionController",["$scope","$modalInstance","newActivity",function($scope,$modalInstance,newActivity){$scope.newActivity=newActivity,$scope.done=function(){$modalInstance.close({newActivity:$scope.newActivity})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("MessageLandlordController",["$scope","$modalInstance","Messages","newActivity",function($scope,$modalInstance,Messages,newActivity){$scope.newActivity=newActivity,$scope.email={},$scope.email.content=Messages.getLandlordEmailMessage(),$scope.done=function(){$scope.email.contact=$scope.email.landlord+"?subject="+Messages.getLandlordEmailSubject(),$scope.emailHref="mailto:"+encodeURI($scope.email.contact+"&body="+$scope.email.content),$modalInstance.close({newActivity:$scope.newActivity}),window.location.href=$scope.emailHref},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").controller("RentalHistoryController",["$scope","$modalInstance","Messages","newActivity",function($scope,$modalInstance,Messages,newActivity){$scope.newActivity=newActivity,$scope.emailContent=Messages.getRentalHistoryMessage(),$scope.emailHref="mailto:"+encodeURI("rentinfo@nyshcr.org?subject=Request For Rental History&body="+$scope.emailContent),$scope.done=function(){$modalInstance.close({newActivity:$scope.newActivity}),window.location.href=$scope.emailHref},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("actions").directive("compileTemplate",["$compile","$parse",function($compile,$parse){return{link:function(scope,element,attr){var parsed=$parse(attr.ngBindHtml),getStringValue=function(){return(parsed(scope)||"").toString()};scope.$watch(getStringValue,function(){$compile(element,null,-9999)(scope)})}}}]),angular.module("actions").directive("statusUpdate",["$rootScope","$filter","$sce","$timeout","Activity","Actions","Problems",function($rootScope,$filter,$sce,$timeout,Activity,Actions,Problems){return{restrict:"E",templateUrl:"modules/actions/partials/status-update.client.view.html",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){}],link:function(scope,element,attrs){scope.problems=Problems.getUserProblems(),scope.status={expanded:!1,tagging:!1,closeAlert:!1,closeErrorAlert:!0,formSubmitted:!1,completed:!1},scope.newActivity={date:"",title:"Status Update",key:"statusUpdate",problems:[],photos:[]},scope.expand=function(event){event.preventDefault(),scope.status.expanded=!0},scope.toggleTagging=function(){scope.status.tagging=!scope.status.tagging},scope.selectProblem=function(problem){if(this.isSelectedProblem(problem)){var i=scope.newActivity.problems.indexOf(problem);scope.newActivity.problems.splice(i,1)}else scope.newActivity.problems.push(problem)},scope.isSelectedProblem=function(problem){return-1!==scope.newActivity.problems.indexOf(problem)},scope.addPhoto=function(file){file&&(scope.newActivity.photos.push(file),console.log(file),console.log(file.lastModifiedDate),file.lastModifiedDate&&(scope.newActivity.date=file.lastModifiedDate))},scope.closeAlert=function(){scope.status.closeAlert=!0},scope.createActivity=function(isValid){if(scope.status.formSubmitted=!0,isValid){$rootScope.loading=!0,console.log("create activity pre creation",scope.newActivity);var activity=new Activity(scope.newActivity);console.log("create activity post creation",scope.newActivity),activity.$save(function(response){console.log("create activity post save",response),$rootScope.loading=!1,scope.status.completed=!0,scope.status.expanded=!1,scope.newActivity={date:"",title:"Status Update",key:"statusUpdate",problems:[],photos:[]}},function(errorResponse){$rootScope.loading=!1,scope.error=errorResponse.data.message,scope.status.closeErrorAlert=!1})}}}}}]),angular.module("actions").directive("toDoItem",["$rootScope","$modal","$sce","$compile","$timeout","Authentication","Activity","Actions",function($rootScope,$modal,$sce,$compile,$timeout,Authentication,Activity,Actions){return{restrict:"E",templateUrl:"modules/actions/partials/to-do-item.client.view.html",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){$scope.filterContentHTML=function(){return $sce.trustAsHtml($scope.action.content)},$scope.filterButtonTitleHTML=function(){return $sce.trustAsHtml($scope.action.cta.buttonTitle)},$scope.closeErrorAlert=!0}],link:function(scope,element,attrs){scope.followUpSubmitted=!1,scope.action.completed||(scope.action.completed=!1),scope.newActivity={startDate:"",title:scope.action.activityTitle,key:scope.action.key},scope.action.isFollowUp&&(scope.action.startDate&&(scope.newActivity.startDate=new Date(scope.action.startDate)),scope.action.followUp&&scope.action.followUp.fields&&(scope.newActivity.fields=[],angular.forEach(scope.action.followUp.fields,function(field,idx){scope.newActivity.fields.push({title:field.title})})));var getSection=function(type){switch(type){case"once":return scope.onceActions;case"recurring":return scope.recurringActions;case"legal":return scope.legalActions;default:return void console.error("this shouldn't happen!")}};scope.isModal=function(){switch(scope.action.cta.type){case"initialContent":return!0;case"modal":return!0;default:return!1}},scope.openModal=function(){scope.newActivity.startDate=new Date;var modalInstance=$modal.open({templateUrl:"modules/actions/partials/modals/"+scope.action.cta.template,controller:scope.action.cta.controller,resolve:{newActivity:function(){return scope.newActivity}}});modalInstance.result.then(function(result){scope.newActivity=result.newActivity,scope.action.hasFollowUp?scope.triggerFollowUp(!0):result.modalError||scope.createActivity(!0)},function(){})},scope.triggerFollowUp=function(hasDoneAction,url,type){hasDoneAction&&(scope.newActivity.startDate=scope.action.startDate=new Date),scope.action.$followUp({type:"add"}),url&&"tel"===type?window.location.href=url:url&&"link"===type&&window.open(url,"_blank")},scope.cancelFollowUp=function(){scope.action.$followUp({type:"remove"})},scope.closeAlert=function(){scope.action.closeAlert=!0;var section=getSection(scope.action.type);section.splice(scope.$index,1)},scope.createActivity=function(isValid){if(scope.action.hasFollowUp&&(scope.followUpSubmitted=!0),isValid){$rootScope.loading=!0,console.log("create activity pre creation",scope.newActivity);var activity=new Activity(scope.newActivity);console.log("create activity post creation",scope.newActivity),activity.$save(function(response){console.log("create activity post save",response),Authentication.user=response,$rootScope.loading=!1,scope.action.completed=!0,scope.action.closeAlert=!1;var newActions=Actions.query({key:scope.newActivity.key},function(){console.log("new actions",newActions),newActions.forEach(function(action){var section=getSection(action.type);section.push(action)})})},function(errorResponse){$rootScope.loading=!1,scope.error=errorResponse.data.message,scope.closeErrorAlert=!1})}}}}}]),angular.module("actions").factory("Actions",["$resource",function($resource){return $resource("actions",{},{followUp:{method:"POST"}})}]),angular.module("actions").factory("Messages",["$http","$q","$filter","Authentication",function($http,$q,$filter,Authentication){var user=Authentication.user,getSMSMessage=function(type){console.log(user);var message;switch(type){case"share":message="Hello, this is "+user.fullName+" at "+user.address+", Apt. "+user.unit+". I'm experiencing issues with my apartment and would like to get them resolved. The public URL for my Case History is http://justfix.nyc/public/"+user.sharing.key+". Thank you!";break;default:message="Hello, this is "+user.fullName+" at "+user.address+", Apt. "+user.unit+". I'm experiencing issues with my apartment and would like to get them resolved. Please contact me as soon as possible at this phone number. Thank you!"}return message},getRentalHistoryMessage=function(){var message="Hello,\n\nI, "+user.fullName+", am currently residing at "+user.address+", Apt. "+user.unit+" in "+user.borough+", NY  and would like to request the rental history for this apartment. Any information you can provide me would be greatly appreciated.\n\nThank you, \n\n"+user.fullName;return message},getLandlordEmailMessage=function(){var message="To whom it may regard, \n\nI am requesting the following repairs in my apartment referenced below [and/or] in the public areas of the building:\n\n",issuesContent="";for(var issue in user.issues){var key=issue,title=$filter("areaTitle")(key),vals=user.issues[issue];if(vals.length){var activityIdx=user.activity.map(function(i){return i.key}).indexOf(key);if(-1!==activityIdx)var activity=user.activity[activityIdx];issuesContent+=title+":\n",vals.forEach(function(v){issuesContent+=" - "+v.title,v.emergency&&(issuesContent+=" (FIX IMMEDIATELY)"),issuesContent+="\n"}),issuesContent+="\n   First Appeared: ",activity?(issuesContent+=$filter("date")(activity.date,"longDate"),issuesContent+="\n   Additional Information:",issuesContent+="\n   "+activity.description,issuesContent+="\n",activity=void 0):issuesContent+="\n   Additional Information:",issuesContent+="\n"}}message+=issuesContent+"\n\n";var superContactIdx=user.activity.map(function(i){return i.key}).indexOf("contactSuper");return-1!==superContactIdx&&(message+="I have already contacted the person responsible for making repairs on ",message+=$filter("date")(user.activity[superContactIdx].date,"longDate"),message+=", but the issue has not been resolved. "),message+="In the meantime, I have recorded photo and written evidence of the violations. Please contact me as soon as possible to arrange a time to have these repairs made by replying directly to this email or calling the phone number provided below.",message+="\n\n\nRegards,\n"+user.fullName+"\n"+user.address+"\nApt. "+user.unit+"\n"+user.borough+", NY \n"+$filter("tel")(user.phone)},getLandlordEmailSubject=function(){return"Formal notice of repairs needed at "+user.address+" Unit "+user.unit};return{getSMSMessage:getSMSMessage,getRentalHistoryMessage:getRentalHistoryMessage,getLandlordEmailMessage:getLandlordEmailMessage,getLandlordEmailSubject:getLandlordEmailSubject}}]),angular.module("actions").factory("Pdf",["$http","$q","Authentication","$filter",function($http,$q,Authentication,$filter){var assemble=function(landlordName,landlordAddr){var zip,assembledObject={issues:[]},issuesCount=0;zip=user.geo?user.geo.zip:"",assembledObject.tenantInfo={phone:user.phone,name:user.fullName,address:user.address+" "+user.unit+" <br> "+user.borough+" <br> New York, "+zip},assembledObject.landlordInfo={name:landlordName.length?landlordName:"To whom it may concern",address:landlordAddr.length?landlordAddr:""};for(var issue in user.issues){var key=issue,title=$filter("areaTitle")(key),vals=user.issues[issue];if(vals.length){var tempObject={},activityIdx=user.activity.map(function(i){return i.key}).indexOf(key);if(-1!==activityIdx)var activity=user.activity[activityIdx];tempObject.title=title,tempObject.vals=[],vals.forEach(function(v){tempObject.vals.push({title:v.title,emergency:v.emergency})}),activity&&(tempObject.startDate=$filter("date")(activity.date,"longDate"),activity.description&&(tempObject.description=activity.description),activity=void 0),assembledObject.issues.push(tempObject),issuesCount++}}return assembledObject},createComplaint=function(landlord){var deferred=$q.defer(),assembledObject=(Authentication.user,assemble(landlord.name,landlord.address));return $http({method:"POST",url:"http://localhost:5000/complaint-letter",data:assembledObject}).then(function(response){Authentication.user.complaintUrl=response.data,deferred.resolve(response.data)},function(error){deferred.reject(error)}),deferred.promise};return{createComplaint:createComplaint}}]),angular.module("activity").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listActivity",{url:"/your-case",templateUrl:"modules/activity/views/list-activity.client.view.html",data:{"protected":!0}}).state("showPublic",{url:"/public",templateUrl:"modules/activity/views/list-activity-public.client.view.html",data:{disableBack:!0}})}]),angular.module("activity").controller("ActivityPublicController",["$scope","$location","$http","Activity","Lightbox",function($scope,$location,$http,Activity,Lightbox){var query=$location.search();query.key||$location.go("/"),$scope.list=function(){Activity["public"]({key:query.key},function(user){$scope.user=user,$scope.activities=$scope.user.activity})},$scope.activityTemplate=function(key){var template="/modules/activity/partials/";switch(key){case"sendLetter":template+="complaint-letter.client.view.html";break;default:template+="default-activity.client.view.html"}return template},$scope.compareDates=function(start,created){var startDate=new Date(start).setHours(0,0,0,0),createdDate=new Date(created).setHours(0,0,0,0);return startDate!==createdDate},$scope.openLightboxModal=function(photos,index){Lightbox.openModal(photos,index)}}]),angular.module("activity").controller("ActivityController",["$scope","$location","$http","Authentication","Users","Activity","Lightbox",function($scope,$location,$http,Authentication,Users,Activity,Lightbox){$scope.authentication=Authentication,$scope.shareCollapsed=!0,$scope.list=function(){$scope.activities=Activity.query()},$scope.activityTemplate=function(key){var template="/modules/activity/partials/";switch(key){case"sendLetter":template+="complaint-letter.client.view.html";break;default:template+="default-activity.client.view.html"}return template},$scope.compareDates=function(start,created){var startDate=new Date(start).setHours(0,0,0,0),createdDate=new Date(created).setHours(0,0,0,0);return startDate!==createdDate},$scope.openLightboxModal=function(photos,index){Lightbox.openModal(photos,index)}}]),angular.module("activity").factory("Activity",["$resource",function($resource){var objectToFormData=function(obj,form,namespace){var formKey,fd=form||new FormData;for(var property in obj)obj.hasOwnProperty(property)&&(formKey=namespace?namespace+"["+property+"]":property,"object"!=typeof obj[property]||obj[property]instanceof File||obj[property]instanceof Date?fd.append(formKey,obj[property]):objectToFormData(obj[property],fd,formKey));return fd},formDataTransform=function(data,headersGetter){return objectToFormData(data)};return $resource("activity",{},{save:{method:"POST",transformRequest:formDataTransform,headers:{"Content-Type":void 0}},"public":{method:"GET",url:"/activity/public"}})}]),angular.module("admin").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"modules/admin/views/admin.client.view.html",data:{"protected":!0}})}]),angular.module("admin").controller("AdminController",["$scope","$q","$modal","Referrals",function($scope,$q,$modal,Referrals){$scope.list=function(){$scope.referrals=Referrals.query()},$scope.newReferral={},$scope.showCodes=function(codes){$modal.open({templateUrl:"modules/admin/partials/show-codes.client.view.html",controller:["$scope","$modalInstance","codes",function($scope,$modalInstance,codes){$scope.codes=codes,$scope.close=function(result){$modalInstance.close()}}],resolve:{codes:function(){return codes}}})},$scope.create=function(){var newReferral=new Referrals($scope.newReferral);newReferral.$save(function(success){$scope.createError=!1,$scope.message="Success!",$scope.list()},function(error){$scope.createError=!0,$scope.message=error.data.message})},$scope["delete"]=function(referral){referral.$delete({id:referral._id}).then(function(){$scope.list()})}}]),angular.module("admin").factory("Referrals",["$resource",function($resource){return $resource("referrals",{},{update:{method:"PUT"},validate:{method:"GET",url:"/referrals/validate"}})}]),angular.module("core").run(["$rootScope","$state","$window","Authentication",function($rootScope,$state,$window,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){Authentication.user&&"landing"===toState.name&&(event.preventDefault(),$state.go("home")),!Authentication.user&&toState.data&&toState.data["protected"]&&(event.preventDefault(),$state.go("signin")),toState.globalStyles?$rootScope.globalStyles=toState.globalStyles:$rootScope.globalStyles=""}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$window.scrollTo(0,0)})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider","$provide",function($stateProvider,$urlRouterProvider,$provide){$provide.decorator("accordionGroupDirective",["$delegate",function($delegate){return $delegate[0].templateUrl="bootstrap-templates/accordion/accordion-group.html",$delegate}]),$provide.decorator("accordionDirective",["$delegate",function($delegate){return $delegate[0].templateUrl="bootstrap-templates/accordion/accordion.html",$delegate}]),$urlRouterProvider.otherwise("/"),$stateProvider.state("landing",{url:"/",templateUrl:"modules/core/views/landing.client.view.html",data:{disableBack:!0}}).state("not-found",{url:"/not-found",templateUrl:"modules/core/views/404.client.view.html",data:{disableBack:!0}}).state("manifesto",{url:"/manifesto",templateUrl:"modules/core/views/manifesto.client.view.html",data:{disableBack:!0}}).state("home",{url:"/home",templateUrl:"modules/core/views/home.client.view.html",data:{"protected":!0,disableBack:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$window","Authentication",function($scope,$window,Authentication){$scope.authentication=Authentication,$scope.window=$window,$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){switch($scope.state=toState.name,$scope.left=!1,$scope.lightBG=!1,toState.name){case"landing":$scope.left=!0;break;case"manifesto":$scope.left=!0,$scope.lightBG=!0}$scope.showBack=!0,toState.data&&toState.data.disableBack&&($scope.showBack=!1)})}]),angular.module("core").controller("HomeController",["$scope","Authentication","deviceDetector",function($scope,Authentication,deviceDetector){$scope.authentication=Authentication,$scope.device=deviceDetector}]),angular.module("core").controller("LandingController",["$scope","Authentication","deviceDetector",function($scope,Authentication,deviceDetector){$scope.authentication=Authentication,$scope.device=deviceDetector}]),angular.module("core").directive("filesModel",function(){return{controller:["$parse","$element","$attrs","$scope",function($parse,$element,$attrs,$scope){var exp=$parse($attrs.filesModel);$element.on("change",function(){exp.assign($scope,this.files),$scope.$apply()})}]}}),angular.module("core").directive("focusOnTouch",function(){return{restrict:"A",link:function(scope,element,attr){element.on("touchstart",function(e){element.focus(),e.preventDefault(),e.stopPropagation()})}}}).directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.on(attr.stopEvent,function(e){e.stopPropagation()})}}}),angular.module("core").directive("fullBg",["$window",function($window){return function(scope,element,attrs){function getWidth(){return self.innerHeight?self.innerWidth:document.documentElement&&document.documentElement.clientHeight?document.documentElement.clientWidth:document.body?document.body.clientWidth:void 0}$window.addEventListener("resize",function(){element.css("width",getWidth()+"px")}),element.css("width",getWidth()+"px")}}]),angular.module("core").directive("goToTop",["$document",function($document){return{restrict:"A",link:function(scope,elm,attrs){elm.bind("click",function(){function scrollToTop(element,to,duration){if(!(0>duration)){var difference=to-element.scrollTop,perTick=difference/duration*10;setTimeout(function(){element.scrollTop=element.scrollTop+perTick,scrollToTop(element,to,duration-10)},10)}}scrollToTop($document[0].body,0,200)})}}}]),angular.module("core").directive("inheritHeight",["$window","$timeout","deviceDetector",function($window,$timeout,deviceDetector){return{restrict:"A",link:function(scope,elm,attrs){scope.$watch("status.loading",function(newV,oldV){$timeout(function(){elm.css("height",elm[0].querySelector(".letter-step.ng-enter").offsetHeight+"px")})})}}}]),angular.module("core").directive("jumpTo",["$document",function($document){return{controller:["$parse","$element","$attrs","$scope",function($parse,$element,$attrs,$scope){var id=$attrs.jumpTo,duration=1e3,easing=function(t){return.5>t?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},offset=0,someElement=angular.element(document.getElementById(id));$element.bind("click",function(e){$document.scrollToElement(someElement,offset,duration,easing)})}]}}]),angular.module("core").directive("languageSelect",["LocaleService",function(LocaleService){return{restrict:"A",replace:!0,templateUrl:"modules/core/partials/language-select.client.view.html",controller:["$scope",function($scope){$scope.currentLocaleDisplayName=LocaleService.getLocaleDisplayName(),$scope.localesDisplayNames=LocaleService.getLocalesDisplayNames(),$scope.visible=$scope.localesDisplayNames&&$scope.localesDisplayNames.length>1,$scope.changeLanguage=function(locale){LocaleService.setLocaleByDisplayName(locale)}}]}}]),angular.module("core").directive("loading",["$document",function($document){return{restrict:"E",templateUrl:"modules/core/partials/loading.client.view.html",link:function(scope,elm,attrs){}}}]),angular.module("core").directive("phoneInput",["$filter","$browser",function($filter,$browser){return{require:"ngModel",link:function($scope,$element,$attrs,ngModelCtrl){var listener=function(){var value=$element.val().replace(/[^0-9]/g,"");$element.val($filter("tel")(value,!1))};ngModelCtrl.$parsers.push(function(viewValue){return viewValue.replace(/[^0-9]/g,"").slice(0,10)}),ngModelCtrl.$render=function(){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1))};var unbindAfterInit=$scope.$watch(function(){return ngModelCtrl.$modelValue},function(value){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1)),unbindAfterInit()});$element.bind("change",listener),$element.bind("keydown",function(event){var key=event.keyCode;91===key||key>15&&19>key||key>=37&&40>=key||$browser.defer(listener)}),$element.bind("paste cut",function(){$browser.defer(listener)})}}}]),angular.module("core").directive("propagateEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.on("click",function(e){console.log("propagate event")})}}}),angular.module("core").directive("smsMessage",["deviceDetector","Authentication","Messages",function(deviceDetector,Authentication,Messages){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var isIOS8=function(){var deviceAgent=deviceDetector.raw.userAgent.toLowerCase();return/(iphone|ipod|ipad).* os [8-9]_/.test(deviceAgent)},href="sms:",type=attrs.type,msg=Messages.getSMSMessage(type);href+=Authentication.user.referral.phone,"ios"===deviceDetector.os?(href+=isIOS8()?"&":";",href=href+"body="+msg,console.log("href",href),attrs.$set("href",href)):"android"===deviceDetector.os?(href=href+"?body="+msg,attrs.$set("href",href)):(console.log(href),console.log("If you were using a phone, the message would be: \n\n"+msg)),element.on("click",function(event){})}}}]),angular.module("core").directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.on(attr.stopEvent,function(e){e.stopPropagation()})}}}),angular.module("core").directive("windowHeight",["$window","deviceDetector",function($window,deviceDetector){return function(scope,element,attrs){function getHeight(){return self.innerWidth?self.innerHeight:document.documentElement&&document.documentElement.clientWidth?document.documentElement.clientHeight:document.body?document.body.clientHeight:void 0}deviceDetector.isMobile()||$window.addEventListener("resize",function(){element.css("height",getHeight()+"px")}),deviceDetector.isMobile()&&"safari"===deviceDetector.browser?element.css("height",getHeight()+60+"px"):element.css("height",getHeight()+"px")}}]),angular.module("core").filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var city,number;switch(value.length){case 1:case 2:case 3:city=value;break;default:city=value.slice(0,3),number=value.slice(3)}return number?(number=number.length>3?number.slice(0,3)+"-"+number.slice(3,7):number,("("+city+") "+number).trim()):"("+city}}),angular.module("core").filter("titlecase",function(){return function(input){var smallWords=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;return input=input.toLowerCase(),input.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,function(match,index,title){return index>0&&index+match.length!==title.length&&match.search(smallWords)>-1&&":"!==title.charAt(index-2)&&("-"!==title.charAt(index+match.length)||"-"===title.charAt(index-1))&&title.charAt(index-1).search(/[^\s-]/)<0?match.toLowerCase():match.substr(1).search(/[A-Z]|\../)>-1?match:match.charAt(0).toUpperCase()+match.substr(1)})}}),angular.module("core").service("LocaleService",["$translate","LOCALES","$rootScope","tmhDynamicLocale",function($translate,LOCALES,$rootScope,tmhDynamicLocale){var localesObj=LOCALES.locales,_LOCALES=Object.keys(localesObj);_LOCALES&&0!==_LOCALES.length||console.error("There are no _LOCALES provided");var _LOCALES_DISPLAY_NAMES=[];_LOCALES.forEach(function(locale){_LOCALES_DISPLAY_NAMES.push(localesObj[locale]);
});var currentLocale=$translate.proposedLanguage(),checkLocaleIsValid=function(locale){return-1!==_LOCALES.indexOf(locale)},setLocale=function(locale){return checkLocaleIsValid(locale)?(currentLocale=locale,void $translate.use(locale)):void console.error('Locale name "'+locale+'" is invalid')};return $rootScope.$on("$translateChangeSuccess",function(event,data){document.documentElement.setAttribute("lang",data.language),tmhDynamicLocale.set(data.language.toLowerCase().replace(/_/g,"-"))}),{getLocaleDisplayName:function(){return localesObj[currentLocale]},setLocaleByDisplayName:function(localeDisplayName){setLocale(_LOCALES[_LOCALES_DISPLAY_NAMES.indexOf(localeDisplayName)])},getLocalesDisplayNames:function(){return _LOCALES_DISPLAY_NAMES}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("findhelp").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("findHelp",{url:"/find-help",templateUrl:"modules/findhelp/views/find-help.client.view.html",data:{"protected":!0}})}]),angular.module("findhelp").controller("FindHelpController",["$scope","$window","Authentication","CartoDB",function($scope,$window,Authentication,CartoDB){$scope.user=Authentication.user,console.log($scope.user),$scope.searched=!1,$scope.toggleOrgType=function(byLegal){$scope.user.byLegal=byLegal,$scope.update()},$scope.update=function(byLegal){$scope.searched=!0;var lat=$scope.user.geo.lat,lng=$scope.user.geo.lon;$scope.updateCartoMap(lat,lng,byLegal),$scope.updateCartoList(lat,lng,byLegal)},$scope.updateCartoList=function(lat,lng,orgType){CartoDB.queryByLatLng(lat,lng,orgType).done(function(data){0==data.rows.length,$scope.resources=data.rows,$scope.$apply()}).error(function(errors){console.log("errors:"+errors)})}}]),angular.module("findhelp").directive("cartoMap",["$rootScope","CartoDB",function($rootScope,CartoDB){return{restrict:"E",template:'<div id="map" class="panel"></div>',scope:!1,link:function(scope,element,attrs){var map=L.map("map",{scrollWheelZoom:!1,center:[40.7127,-73.96270751953125],zoom:10});L.Icon.Default.imagePath="/modules/core/img/leaflet";L.mapboxGL({accessToken:"pk.eyJ1IjoiZGFuLWthc3MiLCJhIjoiY2lsZTFxemtxMGVpdnVoa3BqcjI3d3Q1cCJ9.IESJdCy8fmykXbb626NVEw",style:"mapbox://styles/dan-kass/cilljc5nu004d9vkngyozkhzb",attributionControl:!0}).addTo(map);map.attributionControl.removeFrom(map),map.attributionControl.setPrefix("");var credits=L.control.attribution().addTo(map);credits.addAttribution("Â© <a href='https://www.mapbox.com/map-feedback/'>Mapbox</a> Â© <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a>");var mainSublayer,userMarker,layerSource={user_name:"dan-kass",type:"cartodb",sublayers:[{sql:"SELECT * FROM nyc_cbos_locations",cartocss:"#nyc_cbos_locations{marker-fill-opacity:.9;marker-line-color:#FFF;marker-line-width:1;marker-line-opacity:1;marker-placement:point;marker-type:ellipse;marker-width:10;marker-fill:#F60;marker-allow-overlap:true}"}]};cartodb.createLayer(map,layerSource).addTo(map).done(function(layer){mainSublayer=layer.getSubLayer(0)}).error(function(err){console.log("An error occurred: "+err)}),scope.updateCartoMap=function(lat,lng,orgType){var orgString=orgType?"legal":"community",query="SELECT *, row_number() OVER (ORDER BY dist) as rownum FROM ( SELECT loc.cartodb_id, loc.the_geom, loc.the_geom_webmercator, round( (ST_Distance( ST_GeomFromText('Point("+lng+" "+lat+")', 4326)::geography, loc.the_geom::geography ) / 1609)::numeric, 1 ) AS dist FROM nyc_cbos_locations AS loc, nyc_cbos_service_areas AS sa WHERE ST_Intersects( ST_GeomFromText( 'Point("+lng+" "+lat+")', 4326 ), sa.the_geom ) AND loc.organization = sa.organization AND loc.org_type IN ('"+orgString+"') ORDER BY dist ASC ) T LIMIT 10";userMarker&&map.removeLayer(userMarker),userMarker=L.marker([lat,lng]),userMarker.addTo(map),mainSublayer.set({sql:query,cartocss:"#nyc_cbos_locations{marker-fill-opacity:.9;marker-line-color:#FFF;marker-line-width:1;marker-line-opacity:1;marker-placement:point;marker-type:ellipse;marker-width:10;marker-fill:#F60;marker-allow-overlap:true}#nyc_cbos_locations::labels{text-name:[rownum];text-face-name:'DejaVu Sans Book';text-size:20;text-label-position-tolerance:10;text-fill:#000;text-halo-fill:#FFF;text-halo-radius:2;text-dy:-10;text-allow-overlap:true;text-placement:point;text-placement-type:simple}"}),CartoDB.getSQL().getBounds(query).done(function(bounds){bounds.push([lat,lng]),map.fitBounds(bounds,{padding:[10,10]})})}}}}]),angular.module("findhelp").service("CartoDB",[function(){var cartoSQL=new cartodb.SQL({user:"dan-kass"});return{queryByLatLng:function(lat,lng,orgType){var orgString=orgType?"legal":"community",query="SELECT *, row_number() OVER (ORDER BY dist) as rownum FROM ( SELECT loc.organization, loc.contact_information, loc.address, loc.services, round( (ST_Distance( ST_GeomFromText('Point("+lng+" "+lat+")', 4326)::geography, loc.the_geom::geography ) / 1609)::numeric, 1 ) AS dist FROM nyc_cbos_locations AS loc, nyc_cbos_service_areas AS sa WHERE ST_Intersects( ST_GeomFromText( 'Point("+lng+" "+lat+")', 4326 ), sa.the_geom ) AND loc.organization = sa.organization AND loc.org_type IN ('"+orgString+"') ORDER BY dist ASC ) T LIMIT 10";return cartoSQL.execute(query)},getSQL:function(){return cartoSQL}}}]),angular.module("issues").run(["Menus",function(Menus){}]),angular.module("issues").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/issues/create","/issues/create/access-code"),$stateProvider.state("listIssues",{url:"/issues",templateUrl:"modules/issues/views/list-issues.client.view.html"}).state("createIssue",{url:"/issues/create",templateUrl:"modules/issues/views/create-issue.client.view.html","abstract":!0}).state("createIssue.accessCode",{url:"/access-code",templateUrl:"modules/issues/partials/access-code.client.view.html",data:{disableBack:!0}}).state("createIssue.checklist",{url:"/checklist",title:"Issues Checklist",templateUrl:"modules/issues/partials/create-issue-checklist.client.view.html"}).state("createIssue.general",{url:"/general",title:"General Info",templateUrl:"modules/issues/partials/create-issue-general.client.view.html"}).state("createIssue.personal",{url:"/personal",title:"Personal Information",templateUrl:"modules/issues/partials/create-issue-personal.client.view.html"}).state("createIssue.contact",{url:"/contact",title:"Who To Contact",templateUrl:"modules/issues/partials/create-issue-contact.client.view.html"}).state("createIssue.review",{url:"/review",title:"Review",templateUrl:"modules/issues/partials/create-issue-review.client.view.html"}).state("updateIssues",{url:"/issues/update",templateUrl:"modules/issues/views/update-issues.client.view.html"})}]),angular.module("issues").controller("IssuesChecklistController",["$scope","Issues",function($scope,Issues){$scope.checklist={},$scope.open=[],void 0===$scope.updateView&&($scope.updateView=!1),Issues.getChecklist().then(function(data){var i=0;for(var area in data[0]){var issues=data[0][area].issues;$scope.checklist[area]={numChecked:$scope.newIssue.issues[area]?$scope.newIssue.issues[area].length:0,issues:issues},$scope.newIssue.issues[area]||($scope.newIssue.issues[area]=[]),issues.forEach(function(issue){$scope.issues[area]&&-1!==$scope.issues[area].map(function(i){return i.title}).indexOf(issue.title)&&$scope.select(area,issue)}),$scope.open[i++]=!1}},function(err){console.error(err)}),$scope.oneAtATime=!0,$scope.status={idx:-1,isFirstOpen:!0,isFirstDisabled:!1},$scope.select=function(area,issue){if(this.isSelected(area,issue)){var i=$scope.newIssue.issues[area].indexOf(issue);$scope.newIssue.issues[area].splice(i,1),$scope.checklist[area].numChecked--}else $scope.newIssue.issues[area].push(issue),$scope.checklist[area].numChecked++},$scope.isSelected=function(area,issue){return $scope.newIssue.issues[area]?-1!==$scope.newIssue.issues[area].indexOf(issue):!1},$scope.closeGroup=function(idx){$scope.open[idx]=!1}}]),angular.module("issues").controller("IssuesController",["$scope","$location","$http","Authentication","Users","Referrals",function($scope,$location,$http,Authentication,Users,Referrals){if($scope.authentication=Authentication,$scope.authentication.user?$scope.issues=$scope.authentication.user.issues:$scope.issues={},$scope.newIssue={},$scope.newIssue.issues={},$location.search().address){var query=$location.search();$scope.newIssue.name=query.name,$scope.newIssue.phone=query.phone,$scope.newIssue.address=query.address,$scope.newIssue.borough=query.borough,$scope.newIssue.unit=query.unit,$scope.newIssue.nycha=query.nycha,$scope.newIssue.password=query.password}$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$scope.currentStateTitle=toState.title}),$scope.newUser={},$scope.newUser.accessCode="test",$scope.validateCode=function(){var referral=new Referrals;referral.$validate({code:$scope.newUser.accessCode},function(success){success.referral?(alert("valid"),console.log(success.referral)):alert("invalid")},function(error){})},$scope.create=function(){var newUser={fullName:$scope.newIssue.name,phone:$scope.newIssue.phone,borough:$scope.newIssue.borough,address:$scope.newIssue.address,unit:$scope.newIssue.unit,nycha:$scope.newIssue.nycha,issues:$scope.newIssue.issues,password:$scope.newIssue.password};$http.post("/auth/signup",newUser).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){console.log(response),$scope.error=response})},$scope.update=function(){$scope.authentication.user.issues=$scope.newIssue.issues;var user=new Users($scope.authentication.user);user.$update(function(response){Authentication.user=response,$scope.authentication.user=response,$location.path("/issues")},function(response){$scope.error=response.data.message})},$scope.hasIssues=function(){for(var area in $scope.issues)if($scope.issues[area].length)return!0;return!1}}]),angular.module("issues").factory("Issues",["$http","$q","Authentication",function($http,$q,Authentication){var checklist="data/checklist_old.json",request=function(url){var deferred=$q.defer();return $http.get(url).then(function(response){deferred.resolve(response.data)},function(err){deferred.reject()}),deferred.promise};return{getChecklist:function(){return request(checklist)},getUserIssuesByKey:function(key){return Authentication.user.issues[key]},getUserAreas:function(){var areas=[];return angular.forEach(Authentication.user.issues,function(v,k){v.length&&areas.push(k)}),areas}}}]),function(){function routeConfig($stateProvider){$stateProvider.state("kyr",{url:"/kyr",templateUrl:"modules/kyr/views/kyr.client.view.html",controller:"KyrController"}).state("kyrDetail",{url:"/kyr/:kyrId",templateUrl:"modules/kyr/views/kyr-detail.client.view.html",controller:"KyrDetailController"})}angular.module("kyr").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),angular.module("kyr").controller("KyrDetailController",["$scope","$stateParams","kyrService","$sce",function($scope,$stateParams,kyrService,$sce){var queryThis=$stateParams.kyrId-1;$scope.expand=!1,$scope.canExpand=!1,kyrService.single(queryThis).then(function(data){return $scope.kyr=data,$scope.content=$sce.trustAsHtml(data.content),data.readMore?$scope.canExpand=!0:void 0})}]),angular.module("kyr").controller("KyrController",["kyrService","$scope","Pdf",function(kyrService,$scope,Pdf){$scope.kyrResponse,kyrService.fetch().then(function(data){$scope.kyrResponse=data},function(err){console.log(err)})}]),angular.module("kyr").filter("newlines",["$sce",function($sce){return function(text){var treatedText=text.replace(/\\n/g,"<br/>");return $sce.trustAsHtml(treatedText)}}]),angular.module("kyr").factory("kyrService",["$resource","$http","$q",function($resource,$http,$q){return this.fetch=function(){var deferred=$q.defer();return $http.get("/data/kyr-new.json").then(function(data){var finalData=data.data;deferred.resolve(finalData)},function(err){console.log(err),deferred.reject(err)}),deferred.promise},this.single=function(id){var deferred=$q.defer();return $http.get("/data/kyr-new.json").then(function(data){var finalKyr=data.data[id],length=data.data.length;id===length-1?finalKyr.next=!1:finalKyr.next=id+2,0>=id?finalKyr.prev=!1:(console.log("prev?"),finalKyr.prev=id),void 0!==finalKyr?deferred.resolve(finalKyr):deferred.reject("This KYR does not exist")},function(err){deferred.reject(err)}),deferred.promise},this}]),angular.module("onboarding").run(["$rootScope","$state","Authentication","$window",function($rootScope,$state,Authentication,$window){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){Authentication.user||!toState.onboarding||$rootScope.validated||"onboarding.accessCode"===toState.name||(event.preventDefault(),$state.go("onboarding.accessCode"))})}]),angular.module("onboarding").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/onboarding","/onboarding/referral"),$stateProvider.state("onboarding",{url:"/onboarding",templateUrl:"modules/onboarding/views/onboarding.client.view.html",controller:"OnboardingController","abstract":!0,data:{disableBack:!0}}).state("onboarding.accessCode",{url:"/referral",templateUrl:"modules/onboarding/partials/onboarding-code.client.view.html",onboarding:!0,globalStyles:"white-bg"}).state("onboarding.success",{url:"/success",templateUrl:"modules/onboarding/partials/onboarding-success.client.view.html",onboarding:!0,globalStyles:"white-bg"}).state("onboarding.problems",{url:"/checklist",templateUrl:"modules/onboarding/partials/onboarding-problems.client.view.html",onboarding:!0}).state("onboarding.details",{url:"/personal",templateUrl:"modules/onboarding/partials/onboarding-details.client.view.html",onboarding:!0}).state("onboarding.tutorial",{url:"/tutorial",templateUrl:"modules/onboarding/partials/onboarding-tutorial.client.view.html",onboarding:!0})}]),angular.module("onboarding").controller("OnboardingController",["$rootScope","$scope","$location","Authentication","Referrals","$http","$modal",function($rootScope,$scope,$location,Authentication,Referrals,$http,$modal){$scope.authentication=Authentication,$scope.newUser={},$scope.newUser.problems=[],$scope.newUser={firstName:"Dan",lastName:"Kass",borough:"Brooklyn",address:"654 Park Place",unit:"1RF",phone:"5555555555",password:"password",problems:[]},$scope.accessCode={value:"test5",valid:!1},$scope.validateCode=function(){if($scope.accessCode.valueEntered&&$scope.accessCode.valueEntered===$scope.accessCode.value)$scope.accessCode.valueEntered==$scope.accessCode.value&&($scope.accessCode.valid=!0,$location.path("/onboarding/success"),$scope.codeError=!1,$scope.codeWrong=!1);else{var referral=new Referrals;referral.$validate({code:$scope.accessCode.value},function(success){success.referral?($scope.accessCode.valid=$rootScope.validated=!0,$scope.accessCode.valueEntered=$scope.accessCode.value,$scope.newUser.referral=success.referral,$scope.newUser.referral.code=$scope.accessCode.value,$location.path("/onboarding/success"),$scope.codeError=!1,$scope.codeWrong=!1):($scope.codeError=!1,$scope.codeWrong=!0)},function(error){$scope.codeErrorMessage=error.data.message,$scope.codeError=!0,$scope.codeWrong=!1})}},$scope.cancelAccessCode=function(){$scope.accessCode.valid=!1,$location.path("/onboarding/referral")},$scope.additionalInfo=function(){$modal.open({animation:"true",templateUrl:"modules/onboarding/partials/additional-info.client.view.html"})},$scope.userError=!1,$scope.createAndNext=function(isValid){console.log("create account pre save",$scope.newUser),isValid?($scope.userError=!1,$rootScope.loading=!0,$http.post("/auth/signup",$scope.newUser).success(function(response){$rootScope.loading=!1,$scope.authentication.user=response,console.log("create account post save",response),$location.path("/onboarding/tutorial")}).error(function(err){$rootScope.loading=!1,$scope.error=err})):$scope.userError=!0}}]),angular.module("onboarding").directive("pwCheck",[function(){return{require:"ngModel",link:function(scope,elem,attrs,ctrl){var firstPassword=attrs.pwCheck;elem.on("keyup",function(){scope.$apply(function(){var v=elem.val()===document.getElementById(firstPassword).value;ctrl.$setValidity("pwmatch",v)})})}}}]),angular.module("onboarding").directive("selectionList",function(){return{templateUrl:"modules/onboarding/partials/selection-list.client.view.html",restrict:"E",link:function(scope,element,attrs){for(var aTags=element.find("a"),wrappedTags=[],activateThis=function(){this.on("click",function(e){for(var thisWrapped=angular.element(this),i=0;i<wrappedTags.length;i++)wrappedTags[i].removeClass("active");thisWrapped.addClass("active"),scope.process=this.getAttribute("process"),console.log(scope)})},i=0;i<aTags.length;i++){var elm=angular.element(aTags[i]);activateThis.call(elm),wrappedTags.push(elm)}}}}),angular.module("onboarding").factory("AccessCodeService",["$resource",function($resource){return $resource("access-code",{},{save:{method:"POST"},get:{method:"GET"},"delete":{method:"DELETE"}})}]),angular.module("onboarding").factory("UserListingService",["$resource",function($resource){return $resource("users/list")}]),angular.module("problems").run(["$rootScope","$state","$window","Authentication",function($rootScope,$state,$window,Authentication){}]),angular.module("problems").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("updateProblems",{url:"/checklist",templateUrl:"modules/problems/views/update-problems.client.view.html"})}]),angular.module("problems").controller("ModalProblemController",["$scope","Problems","$modalInstance","issues","userProblem",function($scope,problems,$modalInstance,issues,userProblem){$scope.issues=issues,$scope.userProblem=userProblem;var userIssuesClone=$scope.userProblem.issues.slice(0);$scope.isSelected=function(issue){return $scope.userProblem.issues.containsByKey(issue.key)},$scope.select=function(issue){$scope.isSelected(issue)?$scope.userProblem.issues.removeByKey(issue.key):$scope.userProblem.issues.push(issue)},$scope.save=function(event){$scope.newOther&&$scope.newOther.key.length&&$scope.addOther(event),$modalInstance.close()},$scope.cancel=function(){$scope.userProblem.issues=userIssuesClone,$modalInstance.close()}}]),angular.module("problems").controller("ProblemsController",["$scope","$state","Authentication","Users","Problems",function($scope,$state,Authentication,Users,Problems){$scope.updateSuccess=!1,$scope.updateFail=!1,$scope.updateProblems=function(){var user=new Users(Authentication.user);user.$update(function(response){Authentication.user=response,$scope.updateSuccess=!0,$scope.updateFail=!1},function(response){$scope.updateSuccess=!1,$scope.updateFail=!0,$scope.error=response.data.message})}}]),angular.module("onboarding").directive("problemsChecklist",["Authentication","Problems","$modal",function(Authentication,Problems,$modal){return{templateUrl:"/modules/problems/partials/problems-list.client.view.html",restrict:"E",scope:!1,link:function(scope,element,attrs){var newProblem=function(problem){var newProb={};return newProb.startDate=new Date,newProb.createdDate=new Date,newProb.key=problem.key,newProb.title=problem.title,newProb.icon=problem.icon,newProb.description="",newProb.issues=[],newProb.photos=[],newProb.relatedActivities=[],newProb};Authentication.user?scope.ourUser=Authentication.user:scope.ourUser=scope.newUser,Problems.getLocalFile().then(function(data){scope.problems=data,scope.ourUser.problems.forEach(function(userProb){var prob=scope.problems.getByKey(userProb.key);prob.numChecked=userProb.issues.length,userProb.issues.forEach(function(i){prob.issues.containsByKey(i.key)||prob.issues.push(i)})})}),scope.open=function(problem){scope.currentProblem=problem,scope.ourUser.problems.containsByKey(problem.key)||scope.ourUser.problems.push(newProblem(problem));var ourUserCurrentProblem=scope.ourUser.problems.getByKey(problem.key),modalInstance=$modal.open({animation:"true",templateUrl:"modules/problems/partials/problem-modal.client.view.html",controller:"ModalProblemController",size:"md",backdrop:"static",resolve:{issues:function(){return scope.currentProblem.issues},userProblem:function(){return ourUserCurrentProblem}}});modalInstance.result.then(function(){scope.currentProblem.numChecked=ourUserCurrentProblem.issues.length,0==ourUserCurrentProblem.issues.length&&scope.ourUser.problems.removeByKey(ourUserCurrentProblem.key)})}}}}]),angular.module("onboarding").directive("problemOtherItem",["$timeout","$filter",function($timeout,$filter){return{template:"",restrict:"A",link:function(scope,element,attrs){element.on("touchstart touchend",function(e){e.preventDefault(),e.stopPropagation()}),scope.addMore=!1,scope.toggleOther=function(event){event.preventDefault(),event.stopPropagation(),scope.addMore=!0,scope.newOther={key:"",emergency:!1},element.find("input")[0].focus(),$timeout(function(){var objDiv=document.querySelector(".selecter-options");objDiv.scrollTop=objDiv.scrollHeight})},scope.addOther=function(event){event.stopPropagation(),!scope.userProblem.issues.containsByKey(scope.newOther.key)&&scope.newOther.key.length&&(scope.newOther.key=$filter("titlecase")(scope.newOther.key),scope.issues.push(scope.newOther),scope.userProblem.issues.push(scope.newOther),scope.newOther={key:"",emergency:!1},scope.addMore=!1,$timeout(function(){var objDiv=document.querySelector(".selecter-options");objDiv.scrollTop=objDiv.scrollHeight}))}}}}]),angular.module("problems").filter("problemTitle",function(){return function(input){switch(input){case"bedrooms":return"Bedrooms";case"kitchen":return"Kitchen";case"bathroom":return"Bathrooms";case"entireHome":return"Entire Home";case"livingRoom":return"Living Room";case"publicAreas":return"Public Areas";case"landlordIssues":return"Landlord Issues";default:return""}}}),angular.module("onboarding").factory("Problems",["$http","$q","Authentication",function($http,$q,Authentication){var requestLocalFile=function(){var deferred=$q.defer();return $http.get("data/checklist.json").then(function(response){deferred.resolve(response.data)},function(err){deferred.reject(err)}),deferred.promise};return{getLocalFile:function(){return requestLocalFile()},getUserIssuesByKey:function(key){return Authentication.user.problems.getByKey(key).issues},getUserProblems:function(){for(var problems=[],i=0;i<Authentication.user.problems.length;i++)problems.push(Authentication.user.problems[i].title);return problems}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$rootScope","$q","$location","Authentication",function($rootScope,$q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:$location.path("not-found")}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("/settings","/settings/profile"),$stateProvider.state("settings",{url:"/settings",controller:"SettingsController",templateUrl:"modules/users/views/settings/settings.client.view.html","abstract":!0}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/landing.client.view.html",settings:!0}).state("settings.edit",{url:"/edit",templateUrl:"modules/users/views/settings/edit-profile.client.view.html",settings:!0}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html",settings:!0}).state("settings.phone",{url:"/phone",templateUrl:"modules/users/views/settings/edit-phone.client.view.html",settings:!0}),$stateProvider.state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$rootScope","$scope","$http","$state","Authentication",function($rootScope,$scope,$http,$state,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$state.go("home"),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go("home")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){console.log($scope.credentials),$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,console.log($stateParams),$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","$filter","Users","Authentication",function($scope,$http,$location,$filter,Users,Authentication){$scope.user=Authentication.user,$scope.passwordVerified=!1,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.signOut=function(){$http.get("/auth/signout").then(function(success){console.log(success)},function(err){console.log(err)})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);console.log("user",user),user.firstName=user.fullName.split(" ")[0],user.lastName=user.fullName.split(" ")[1],user.$update(function(response){console.log(response),$scope.success=!0,Authentication.user=response},function(response){console.log(response),$scope.error=response.data.message.message,response.data.message.errors&&response.data.message.errors.phone&&($scope.errorPhone=response.data.message.errors.phone.message)})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.verifyPassword=function(password){$http.post("/users/verify-password",{password:password}).success(function(response){$scope.passwordVerified=!0}).error(function(err){$scope.passwordError=!0,$scope.errorMessage=err.message})}}]),angular.module("core").directive("toggleSharing",["Users","Authentication",function(Users,Authentication){return{restrict:"A",scope:!0,link:function(scope,elm,attrs){Authentication.user.sharing.enabled&&(elm[0].querySelector("input").checked=!0),elm.bind("click",function(event){event.stopPropagation(),console.log(event.target.tagName),"INPUT"===event.target.tagName&&Users.enableSharing(function(user){Authentication.user=user})})}}}]),angular.module("users").factory("Authentication",[function($resource){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"},enableSharing:{method:"GET",url:"/users/public"}})}]);